[{"/home/psc/fullstackopen/part2/src/index.js":"1","/home/psc/fullstackopen/part2/src/ex/ex2_20.js":"2","/home/psc/fullstackopen/part2/src/ex/ex2_16_module.js":"3"},{"size":257,"mtime":1610644483314,"results":"4","hashOfConfig":"5"},{"size":4811,"mtime":1611561141906,"results":"6","hashOfConfig":"5"},{"size":1161,"mtime":1611562090077,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"ip6uro",{"filePath":"11","messages":"12","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"13","usedDeprecatedRules":"10"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16"},"/home/psc/fullstackopen/part2/src/index.js",[],["17","18"],"/home/psc/fullstackopen/part2/src/ex/ex2_20.js",["19"],"import React, { useEffect, useState } from \"react\"\nimport service from \"./ex2_16_module\"\n\nconst Notification = ({ message, isError }) => {\n  if (message == null) {\n    return null\n  }\n  const notiStyle = {\n    color: isError ? \"red\" : \"green\",\n    background: \"lightgrey\",\n    fontSize: \"20px\",\n    borderStyle: \"solid\",\n    borderRadius: \"5px\",\n    padding: \"10px\",\n    marginBottom: \"10px\",\n  }\n  return <div style={notiStyle}>{message}</div>\n}\n\nconst Filter = ({ showWord, ShowWordHandler }) => {\n  return (\n    <div>\n      filter shown with\n      <input value={showWord} onChange={ShowWordHandler} />\n    </div>\n  )\n}\nconst PersonForm = ({\n  newName,\n  newPhone,\n  newNameHandler,\n  newPhoneHandler,\n  addPerson,\n}) => {\n  return (\n    <form>\n      <div>\n        name:\n        <input value={newName} onChange={newNameHandler} />\n      </div>\n      <div>\n        phone:\n        <input value={newPhone} onChange={newPhoneHandler} />\n      </div>\n      <div>\n        <button type='submit' onClick={addPerson}>\n          add\n        </button>\n      </div>\n    </form>\n  )\n}\nconst Persons = ({ personsToShow, deletePerson }) => {\n  return (\n    <>\n      {personsToShow.map((person) => (\n        <li key={person.id}>\n          {person.name} {person.number}\n          <button onClick={(e) => deletePerson(e, person.id)}>delete</button>\n        </li>\n      ))}\n    </>\n  )\n}\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState(\"\")\n  const [newPhone, setNewPhone] = useState(\"\")\n  const [showWord, setShowWord] = useState(\"\")\n  const [message, setMessage] = useState(\"\")\n  const [isError, setIsError] = useState(false)\n  const personsToShow =\n    showWord === \"\"\n      ? persons\n      : persons.filter((person) => person.name.includes(showWord))\n\n  const newNameHandler = (e) => {\n    setNewName(e.target.value)\n  }\n  const newPhoneHandler = (e) => {\n    setNewPhone(e.target.value)\n  }\n  const ShowWordHandler = (e) => {\n    setShowWord(e.target.value)\n  }\n  const addPerson = (e) => {\n    e.preventDefault()\n\n    if (persons.map((p) => p.name).includes(newName)) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const newObject = {\n          name: newName,\n          number: newPhone,\n          id: persons.find((p) => p.name === newName).id,\n        }\n        service.update(newObject).then((res) => {\n          setPersons(\n            persons.map((p) => {\n              if (p.id !== res.id) {\n                return p\n              } else {\n                return res\n              }\n            })\n          )\n            .then((res) => {\n              setNewName(\"\")\n              setNewPhone(\"\")\n              setMessage(`Success update number about \"${newObject.name}\"`)\n              setIsError(false)\n            })\n            .catch((err) => {\n              setNewName(\"\")\n              setNewPhone(\"\")\n              setMessage(`failed update number about \"${newObject.name}\"`)\n              setIsError(true)\n            })\n        })\n      }\n    } else {\n      const newObject = {\n        name: newName,\n        number: newPhone,\n        id: persons.length + 1,\n      }\n      service\n        .create(newObject)\n        .then((res) => {\n          console.log(res)\n          setPersons(persons.concat(res))\n          setNewName(\"\")\n          setNewPhone(\"\")\n          setMessage(`Success create person \"${newObject.name}\"`)\n          setIsError(false)\n        })\n        .catch((err) => {\n          setNewName(\"\")\n          setNewPhone(\"\")\n          setMessage(`failed create person \"${newObject.name}\"`)\n          setIsError(true)\n        })\n    }\n  }\n  const deletePerson = (e, id) => {\n    e.preventDefault()\n    if (window.confirm(\"Do you really want to delete \" + id + \"?\")) {\n      service\n        .deleteObject(id)\n        .then((res) => {\n          setPersons(persons.filter((p) => p.id != id))\n          setMessage(`Success delete person ${id}`)\n          setIsError(false)\n        })\n        .catch((err) => {\n          setMessage(err.toString() + \" \" + id)\n          setIsError(true)\n        })\n    }\n  }\n\n  useEffect(() => {\n    service.getAll().then((res) => {\n      setPersons(res)\n    })\n  }, [])\n\n  return (\n    <div>\n      <Notification message={message} isError={isError}/>\n      <h2>Phonebook</h2>\n      <Filter showWord={showWord} ShowWordHandler={ShowWordHandler} />\n      <h2>add a new</h2>\n      <PersonForm\n        newName={newName}\n        newPhone={newPhone}\n        newNameHandler={newNameHandler}\n        newPhoneHandler={newPhoneHandler}\n        addPerson={addPerson}\n      />\n      <h2>Numbers</h2>\n      <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App\n","/home/psc/fullstackopen/part2/src/ex/ex2_16_module.js",["20","21"],"import axios from \"axios\"\n//const baseUrl = \"http://3.14.3.74:3001/api/persons\"\nconst baseUrl = \"http://localhost:3001/api/persons\"\nconst getAll = async () => {\n  let promise\n  try {\n    promise = await axios.get(baseUrl)\n    console.log(promise.data)\n    return promise.data\n  } catch (err) {\n    console.log(err.toString())\n  }\n}\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject).then((res) => res.data)\n  //.catch((err) => console.log(\"err \", err.toString()))\n}\n\nconst deleteObject = async (id) => {\n  return axios.delete(baseUrl + \"/\" + id).then((res) => {\n    if(res.status == 204){\n      console.log(\"err\")\n      throw new Error(\"no content\")\n    }\n    console.log(res)\n    return res.data\n  })\n  /*\n    let promise\n    promise = await axios.delete(baseUrl + \"/\" + id)\n    console.log(promise)\n    return promise.data\n    */\n}\nconst update = async (newObject) => {\n  let promise\n  try {\n    promise = await axios.put(baseUrl + \"/\" + newObject.id, newObject)\n    console.log(\"update! \", promise)\n    return promise.data\n  } catch (err) {\n    console.log(err.toString())\n  }\n}\n\nexport default { getAll, create, deleteObject, update }\n",{"ruleId":"22","replacedBy":"23"},{"ruleId":"24","replacedBy":"25"},{"ruleId":"26","severity":1,"message":"27","line":154,"column":49,"nodeType":"28","messageId":"29","endLine":154,"endColumn":51},{"ruleId":"26","severity":1,"message":"30","line":22,"column":19,"nodeType":"28","messageId":"29","endLine":22,"endColumn":21},{"ruleId":"31","severity":1,"message":"32","line":47,"column":1,"nodeType":"33","endLine":47,"endColumn":56},"no-native-reassign",["34"],"no-negated-in-lhs",["35"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]